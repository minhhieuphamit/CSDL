/*
Họ và tên: Phạm Minh Hiếu
MSSV: 2011063873
Lớp: 20DTHB4
*/

-- Tạo database 
CREATE DATABASE DIALYVN
ON
	(NAME='DIALYVN_DATA',
	FILENAME='H:\BAITAP\DIALYVN.MDF')
LOG ON
	(NAME='DIALYVN_LOG',
	FILENAME='H:\BAITAP\DIALYVN.LDF')

USE DIALYVN
GO

--Tạo bảng tỉnh, thành phố
CREATE TABLE TINH_TP
(
	MA_T_TP VARCHAR(3),
	TEN_T_TP NVARCHAR(20),
	DT FLOAT,
	DS BIGINT,
	MIEN NVARCHAR(10),

	CONSTRAINT PK_TINH_TP PRIMARY KEY(MA_T_TP)
)
GO

--Tạo bảng biên giới
CREATE TABLE BIENGIOI
(
	NUOC NVARCHAR(15),
	MA_T_TP VARCHAR(3),

	CONSTRAINT PK_BIENGIOI PRIMARY KEY(NUOC, MA_T_TP),

	CONSTRAINT FK_BIENGIOI FOREIGN KEY(MA_T_TP) REFERENCES TINH_TP(MA_T_TP)
	ON UPDATE CASCADE
	ON DELETE CASCADE,
)
GO

--Tạo bảng láng giềng
CREATE TABLE LANGGIENG
(
	MA_T_TP VARCHAR(3),
	LG VARCHAR(3),

	CONSTRAINT PK_LANGGIENG PRIMARY KEY(MA_T_TP, LG),

	CONSTRAINT FK_LANGGIENG FOREIGN KEY(MA_T_TP) REFERENCES TINH_TP(MA_T_TP)
	ON UPDATE CASCADE
	ON DELETE CASCADE,

	CONSTRAINT FK_LG FOREIGN KEY (LG) REFERENCES dbo.TINH_TP(MA_T_TP)
	ON UPDATE CASCADE
	ON DELETE CASCADE,
)
GO

--Thêm dữ liệu vào bảng TINH_TP
INSERT INTO TINH_TP VALUES('AG', N'An Giang', '3406', '2142709', N'Nam')
INSERT INTO TINH_TP VALUES('BR', N'Bà Rịa-Vũng Tàu', '1982', '996682', N'Nam')
INSERT INTO TINH_TP VALUES('BC', N'Bắc Cạn', '4857', '293826', N'Bắc')
INSERT INTO TINH_TP VALUES('BG', N'Bắc Giang', '3823', '1554131', N'Bắc')
INSERT INTO TINH_TP VALUES('BL', N'Bạc Liêu', '2526', '856518', N'Nam')
INSERT INTO TINH_TP VALUES('BT', N'Bến Tre', '2322', '1255946', N'Nam')
GO

--Thêm dữ liệu vào bảng láng giềng
INSERT INTO LANGGIENG VALUES('AG', 'DT')
INSERT INTO LANGGIENG VALUES('AG', 'CT')
INSERT INTO LANGGIENG VALUES('AG', 'KG')
INSERT INTO LANGGIENG VALUES('BR', 'HCM')
INSERT INTO LANGGIENG VALUES('BR', 'BTH')
GO

--Thêm dữ liệu vào bảng biên giới
INSERT INTO BIENGIOI VALUES('CPC', 'DT')
INSERT INTO BIENGIOI VALUES('CPC', 'HCM')
GO

/*CREATE VIEW view_CAU1([Tỉnh/Thành phố], [Dân số], [Diện tích])
AS
	SELECT TEN_T_TP, DS, DT
	FROM TINH_TP
	WHERE DT >= 5000
GO

SELECT * FROM view_CAU1
GO*/

--Câu 1a
SELECT TEN_T_TP[Tỉnh/Thành phố], DS[Dân số], DT[Diện tích]
FROM TINH_TP
WHERE DT >= 5000
GO

--Câu 1b
DECLARE @DT FLOAT = 5500
SELECT TEN_T_TP[Tỉnh/Thành phố], DS[Dân số], DT[Diện tích]
FROM TINH_TP
WHERE DT >= @DT
GO

--Câu 2a
SELECT TEN_T_TP[Tỉnh/Thành phố], DT[Diện tích], MIEN[Miền]
FROM TINH_TP
WHERE MIEN LIKE N'%Bắc%'
GO

--Câu 2b
DECLARE @MIEN NVARCHAR(10) = N'Trung'
SELECT TEN_T_TP[Tỉnh/Thành phố], DT[Diện tích], MIEN[Miền]
FROM TINH_TP
WHERE MIEN LIKE @MIEN
GO

--Câu 3
DECLARE @3 NVARCHAR(20) = N'Bắc'
SELECT T.MA_T_TP[Mã], T.TEN_T_TP[Tỉnh/Thành phố], T.MIEN[Miền], BG.NUOC[Nước tiếp giáp]
FROM TINH_TP T, BIENGIOI BG
WHERE T.MA_T_TP = BG.MA_T_TP AND T.MIEN LIKE @3
GO

--Câu 4
SELECT SUM(DT)/COUNT(MA_T_TP) [Diện tích trung bình]
FROM TINH_TP
WHERE DT IS NOT NULL
GO

--Câu 5
SELECT TEN_T_TP[Tỉnh/Thành phố], DS[Dân số], DT[Diện tích]
FROM TINH_TP
WHERE DT >= 7000
GO

--Câu 6
SELECT TEN_T_TP[Tỉnh/Thành phố], DS[Dân số], MIEN[Miền]
FROM TINH_TP
WHERE MIEN LIKE N'%Bắc%'
GO

--Câu 7
SELECT BG.NUOC[Nước tiếp giáp], T.TEN_T_TP[Tỉnh/Thành phố tiếp giáp], MIEN[Miền]
FROM BIENGIOI BG, TINH_TP T
WHERE BG.MA_T_TP = T.MA_T_TP AND T.MIEN LIKE 'Nam'
GO

--Câu 8
SELECT AVG(DT) [Diện tích trung bình]
FROM TINH_TP
GO

--Câu 9
SELECT TEN_T_TP, (DS/DT)[Mật độ]
FROM TINH_TP 
GO

--Câu 10
SELECT T.TEN_T_TP[Tỉnh/Thành phố giáp Long An] 
FROM TINH_TP T, LANGGIENG LG
WHERE LG.LG = T.MA_T_TP  AND LG.MA_T_TP LIKE '%LA%'
GO

--Câu 11
SELECT COUNT(MA_T_TP)[Số lượng]
FROM BIENGIOI BG
WHERE BG.NUOC LIKE '%CPC%'
GO

--Câu 12
SELECT TOP 10 WITH TIES T.TEN_T_TP[Tỉnh/Thành phố], T.DT[Diện tích]
FROM TINH_TP T
ORDER BY T.DT DESC
GO

--Câu 13
SELECT TOP 1 TEN_T_TP, (DS/DT)[Mật độ]
FROM TINH_TP 
ORDER BY (DS/DT) DESC
GO

--Câu 14
SELECT TEN_T_TP [Tỉnh/ Thành phố]
FROM TINH_TP 
WHERE MA_T_TP IN
(
	SELECT MA_T_TP
	FROM BIENGIOI
	GROUP BY MA_T_TP
	HAVING COUNT(NUOC) >=2
)
GO

--Câu 15
SELECT TEN_T_TP[Tỉnh/Thành phố], MIEN[Miền]
FROM TINH_TP
ORDER BY MIEN 
GO

--Câu 16
SELECT TOP 1 WITH TIES T.TEN_T_TP, COUNT(LG) [Số lượng láng giềng]
FROM TINH_TP T, LANGGIENG LG
WHERE T.MA_T_TP = LG.MA_T_TP
GROUP BY T.TEN_T_TP
ORDER BY COUNT(LG) DESC
GO

--Câu 17
SELECT TEN_T_TP [Tên tỉnh/ thành phố], DT
FROM TINH_TP 
WHERE DT < (SELECT AVG(DT) FROM TINH_TP TP)
GO

--Câu 18
SELECT TEN_T_TP [Tỉnh/ thành phố]
FROM TINH_TP T, LANGGIENG LG
WHERE T.MA_T_TP = LG.LG AND MIEN LIKE 'Trung'
GROUP BY TEN_T_TP
GO

--Câu 17 cách 2
DECLARE @DTTB FLOAT
SET @DTTB = (SELECT AVG(DT) FROM TINH_TP WHERE DT IS NOT NULL)
SELECT TEN_T_TP, DT
FROM TINH_TP
WHERE DT < @DTTB
GO

--Câu 19
SELECT DISTINCT T.TEN_T_TP [Tỉnh/ thành phố]
FROM TINH_TP T INNER JOIN LANGGIENG LG ON T.MA_T_TP = LG.MA_T_TP
WHERE T.MA_T_TP NOT IN
	(SELECT A.MA_T_TP
	FROM (TINH_TP A INNER JOIN LANGGIENG B ON A.MA_T_TP = B.MA_T_TP INNER JOIN TINH_TP C ON B.LG = C.MA_T_TP)
	WHERE A.DT < C.DT)
GO

--Câu 19 cách 2
SELECT T.TEN_T_TP, T.DT
FROM (TINH_TP T INNER JOIN LANGGIENG LG ON T.MA_T_TP = LG.MA_T_TP) INNER JOIN  TINH_TP T1 ON LG.LG = T1.MA_T_TP
GROUP BY T.TEN_T_TP, T.DT
HAVING T.DT > MAX(T1.DT)
GO

--Câu 20

SELECT T1.LG [Tỉnh/Thành phố], T2.LG [Tỉnh/Thành phố], T3.LG [Tỉnh/Thành phố]
FROM LANGGIENG T1, LANGGIENG T2, LANGGIENG T3, TINH_TP T
WHERE T1.LG = T2.MA_T_TP AND T2.LG = T3.MA_T_TP AND T1.MA_T_TP = T.MA_T_TP AND T.TEN_T_TP LIKE N'%Hồ Chí Minh%' and T2.LG != T1.MA_T_TP AND T3.LG != T2.MA_T_TP AND T3.LG != T1.MA_T_TP